/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.my.rdd;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StationMetaData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StationMetaData\",\"namespace\":\"com.my.rdd\",\"fields\":[{\"name\":\"stationId\",\"type\":\"string\"},{\"name\":\"stationName\",\"type\":\"string\"},{\"name\":\"stationCity\",\"type\":\"string\"},{\"name\":\"stationState\",\"type\":\"string\"},{\"name\":\"stationICAO\",\"type\":\"string\"},{\"name\":\"stationLatitude\",\"type\":\"string\"},{\"name\":\"stationLongitude\",\"type\":\"string\"},{\"name\":\"stationElev\",\"type\":\"string\"},{\"name\":\"stationBeginTime\",\"type\":\"string\"},{\"name\":\"stationEndTime\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence stationId;
  @Deprecated public java.lang.CharSequence stationName;
  @Deprecated public java.lang.CharSequence stationCity;
  @Deprecated public java.lang.CharSequence stationState;
  @Deprecated public java.lang.CharSequence stationICAO;
  @Deprecated public java.lang.CharSequence stationLatitude;
  @Deprecated public java.lang.CharSequence stationLongitude;
  @Deprecated public java.lang.CharSequence stationElev;
  @Deprecated public java.lang.CharSequence stationBeginTime;
  @Deprecated public java.lang.CharSequence stationEndTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StationMetaData() {}

  /**
   * All-args constructor.
   */
  public StationMetaData(java.lang.CharSequence stationId, java.lang.CharSequence stationName, java.lang.CharSequence stationCity, java.lang.CharSequence stationState, java.lang.CharSequence stationICAO, java.lang.CharSequence stationLatitude, java.lang.CharSequence stationLongitude, java.lang.CharSequence stationElev, java.lang.CharSequence stationBeginTime, java.lang.CharSequence stationEndTime) {
    this.stationId = stationId;
    this.stationName = stationName;
    this.stationCity = stationCity;
    this.stationState = stationState;
    this.stationICAO = stationICAO;
    this.stationLatitude = stationLatitude;
    this.stationLongitude = stationLongitude;
    this.stationElev = stationElev;
    this.stationBeginTime = stationBeginTime;
    this.stationEndTime = stationEndTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return stationId;
    case 1: return stationName;
    case 2: return stationCity;
    case 3: return stationState;
    case 4: return stationICAO;
    case 5: return stationLatitude;
    case 6: return stationLongitude;
    case 7: return stationElev;
    case 8: return stationBeginTime;
    case 9: return stationEndTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: stationId = (java.lang.CharSequence)value$; break;
    case 1: stationName = (java.lang.CharSequence)value$; break;
    case 2: stationCity = (java.lang.CharSequence)value$; break;
    case 3: stationState = (java.lang.CharSequence)value$; break;
    case 4: stationICAO = (java.lang.CharSequence)value$; break;
    case 5: stationLatitude = (java.lang.CharSequence)value$; break;
    case 6: stationLongitude = (java.lang.CharSequence)value$; break;
    case 7: stationElev = (java.lang.CharSequence)value$; break;
    case 8: stationBeginTime = (java.lang.CharSequence)value$; break;
    case 9: stationEndTime = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'stationId' field.
   */
  public java.lang.CharSequence getStationId() {
    return stationId;
  }

  /**
   * Sets the value of the 'stationId' field.
   * @param value the value to set.
   */
  public void setStationId(java.lang.CharSequence value) {
    this.stationId = value;
  }

  /**
   * Gets the value of the 'stationName' field.
   */
  public java.lang.CharSequence getStationName() {
    return stationName;
  }

  /**
   * Sets the value of the 'stationName' field.
   * @param value the value to set.
   */
  public void setStationName(java.lang.CharSequence value) {
    this.stationName = value;
  }

  /**
   * Gets the value of the 'stationCity' field.
   */
  public java.lang.CharSequence getStationCity() {
    return stationCity;
  }

  /**
   * Sets the value of the 'stationCity' field.
   * @param value the value to set.
   */
  public void setStationCity(java.lang.CharSequence value) {
    this.stationCity = value;
  }

  /**
   * Gets the value of the 'stationState' field.
   */
  public java.lang.CharSequence getStationState() {
    return stationState;
  }

  /**
   * Sets the value of the 'stationState' field.
   * @param value the value to set.
   */
  public void setStationState(java.lang.CharSequence value) {
    this.stationState = value;
  }

  /**
   * Gets the value of the 'stationICAO' field.
   */
  public java.lang.CharSequence getStationICAO() {
    return stationICAO;
  }

  /**
   * Sets the value of the 'stationICAO' field.
   * @param value the value to set.
   */
  public void setStationICAO(java.lang.CharSequence value) {
    this.stationICAO = value;
  }

  /**
   * Gets the value of the 'stationLatitude' field.
   */
  public java.lang.CharSequence getStationLatitude() {
    return stationLatitude;
  }

  /**
   * Sets the value of the 'stationLatitude' field.
   * @param value the value to set.
   */
  public void setStationLatitude(java.lang.CharSequence value) {
    this.stationLatitude = value;
  }

  /**
   * Gets the value of the 'stationLongitude' field.
   */
  public java.lang.CharSequence getStationLongitude() {
    return stationLongitude;
  }

  /**
   * Sets the value of the 'stationLongitude' field.
   * @param value the value to set.
   */
  public void setStationLongitude(java.lang.CharSequence value) {
    this.stationLongitude = value;
  }

  /**
   * Gets the value of the 'stationElev' field.
   */
  public java.lang.CharSequence getStationElev() {
    return stationElev;
  }

  /**
   * Sets the value of the 'stationElev' field.
   * @param value the value to set.
   */
  public void setStationElev(java.lang.CharSequence value) {
    this.stationElev = value;
  }

  /**
   * Gets the value of the 'stationBeginTime' field.
   */
  public java.lang.CharSequence getStationBeginTime() {
    return stationBeginTime;
  }

  /**
   * Sets the value of the 'stationBeginTime' field.
   * @param value the value to set.
   */
  public void setStationBeginTime(java.lang.CharSequence value) {
    this.stationBeginTime = value;
  }

  /**
   * Gets the value of the 'stationEndTime' field.
   */
  public java.lang.CharSequence getStationEndTime() {
    return stationEndTime;
  }

  /**
   * Sets the value of the 'stationEndTime' field.
   * @param value the value to set.
   */
  public void setStationEndTime(java.lang.CharSequence value) {
    this.stationEndTime = value;
  }

  /** Creates a new StationMetaData RecordBuilder */
  public static com.my.rdd.StationMetaData.Builder newBuilder() {
    return new com.my.rdd.StationMetaData.Builder();
  }
  
  /** Creates a new StationMetaData RecordBuilder by copying an existing Builder */
  public static com.my.rdd.StationMetaData.Builder newBuilder(com.my.rdd.StationMetaData.Builder other) {
    return new com.my.rdd.StationMetaData.Builder(other);
  }
  
  /** Creates a new StationMetaData RecordBuilder by copying an existing StationMetaData instance */
  public static com.my.rdd.StationMetaData.Builder newBuilder(com.my.rdd.StationMetaData other) {
    return new com.my.rdd.StationMetaData.Builder(other);
  }
  
  /**
   * RecordBuilder for StationMetaData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StationMetaData>
    implements org.apache.avro.data.RecordBuilder<StationMetaData> {

    private java.lang.CharSequence stationId;
    private java.lang.CharSequence stationName;
    private java.lang.CharSequence stationCity;
    private java.lang.CharSequence stationState;
    private java.lang.CharSequence stationICAO;
    private java.lang.CharSequence stationLatitude;
    private java.lang.CharSequence stationLongitude;
    private java.lang.CharSequence stationElev;
    private java.lang.CharSequence stationBeginTime;
    private java.lang.CharSequence stationEndTime;

    /** Creates a new Builder */
    private Builder() {
      super(com.my.rdd.StationMetaData.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.my.rdd.StationMetaData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.stationId)) {
        this.stationId = data().deepCopy(fields()[0].schema(), other.stationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stationName)) {
        this.stationName = data().deepCopy(fields()[1].schema(), other.stationName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stationCity)) {
        this.stationCity = data().deepCopy(fields()[2].schema(), other.stationCity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stationState)) {
        this.stationState = data().deepCopy(fields()[3].schema(), other.stationState);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stationICAO)) {
        this.stationICAO = data().deepCopy(fields()[4].schema(), other.stationICAO);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.stationLatitude)) {
        this.stationLatitude = data().deepCopy(fields()[5].schema(), other.stationLatitude);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stationLongitude)) {
        this.stationLongitude = data().deepCopy(fields()[6].schema(), other.stationLongitude);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.stationElev)) {
        this.stationElev = data().deepCopy(fields()[7].schema(), other.stationElev);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.stationBeginTime)) {
        this.stationBeginTime = data().deepCopy(fields()[8].schema(), other.stationBeginTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.stationEndTime)) {
        this.stationEndTime = data().deepCopy(fields()[9].schema(), other.stationEndTime);
        fieldSetFlags()[9] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StationMetaData instance */
    private Builder(com.my.rdd.StationMetaData other) {
            super(com.my.rdd.StationMetaData.SCHEMA$);
      if (isValidValue(fields()[0], other.stationId)) {
        this.stationId = data().deepCopy(fields()[0].schema(), other.stationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.stationName)) {
        this.stationName = data().deepCopy(fields()[1].schema(), other.stationName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stationCity)) {
        this.stationCity = data().deepCopy(fields()[2].schema(), other.stationCity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.stationState)) {
        this.stationState = data().deepCopy(fields()[3].schema(), other.stationState);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.stationICAO)) {
        this.stationICAO = data().deepCopy(fields()[4].schema(), other.stationICAO);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.stationLatitude)) {
        this.stationLatitude = data().deepCopy(fields()[5].schema(), other.stationLatitude);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.stationLongitude)) {
        this.stationLongitude = data().deepCopy(fields()[6].schema(), other.stationLongitude);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.stationElev)) {
        this.stationElev = data().deepCopy(fields()[7].schema(), other.stationElev);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.stationBeginTime)) {
        this.stationBeginTime = data().deepCopy(fields()[8].schema(), other.stationBeginTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.stationEndTime)) {
        this.stationEndTime = data().deepCopy(fields()[9].schema(), other.stationEndTime);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'stationId' field */
    public java.lang.CharSequence getStationId() {
      return stationId;
    }
    
    /** Sets the value of the 'stationId' field */
    public com.my.rdd.StationMetaData.Builder setStationId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.stationId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'stationId' field has been set */
    public boolean hasStationId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'stationId' field */
    public com.my.rdd.StationMetaData.Builder clearStationId() {
      stationId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'stationName' field */
    public java.lang.CharSequence getStationName() {
      return stationName;
    }
    
    /** Sets the value of the 'stationName' field */
    public com.my.rdd.StationMetaData.Builder setStationName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.stationName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'stationName' field has been set */
    public boolean hasStationName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'stationName' field */
    public com.my.rdd.StationMetaData.Builder clearStationName() {
      stationName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'stationCity' field */
    public java.lang.CharSequence getStationCity() {
      return stationCity;
    }
    
    /** Sets the value of the 'stationCity' field */
    public com.my.rdd.StationMetaData.Builder setStationCity(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.stationCity = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'stationCity' field has been set */
    public boolean hasStationCity() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'stationCity' field */
    public com.my.rdd.StationMetaData.Builder clearStationCity() {
      stationCity = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'stationState' field */
    public java.lang.CharSequence getStationState() {
      return stationState;
    }
    
    /** Sets the value of the 'stationState' field */
    public com.my.rdd.StationMetaData.Builder setStationState(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.stationState = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'stationState' field has been set */
    public boolean hasStationState() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'stationState' field */
    public com.my.rdd.StationMetaData.Builder clearStationState() {
      stationState = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'stationICAO' field */
    public java.lang.CharSequence getStationICAO() {
      return stationICAO;
    }
    
    /** Sets the value of the 'stationICAO' field */
    public com.my.rdd.StationMetaData.Builder setStationICAO(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.stationICAO = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'stationICAO' field has been set */
    public boolean hasStationICAO() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'stationICAO' field */
    public com.my.rdd.StationMetaData.Builder clearStationICAO() {
      stationICAO = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'stationLatitude' field */
    public java.lang.CharSequence getStationLatitude() {
      return stationLatitude;
    }
    
    /** Sets the value of the 'stationLatitude' field */
    public com.my.rdd.StationMetaData.Builder setStationLatitude(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.stationLatitude = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'stationLatitude' field has been set */
    public boolean hasStationLatitude() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'stationLatitude' field */
    public com.my.rdd.StationMetaData.Builder clearStationLatitude() {
      stationLatitude = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'stationLongitude' field */
    public java.lang.CharSequence getStationLongitude() {
      return stationLongitude;
    }
    
    /** Sets the value of the 'stationLongitude' field */
    public com.my.rdd.StationMetaData.Builder setStationLongitude(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.stationLongitude = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'stationLongitude' field has been set */
    public boolean hasStationLongitude() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'stationLongitude' field */
    public com.my.rdd.StationMetaData.Builder clearStationLongitude() {
      stationLongitude = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'stationElev' field */
    public java.lang.CharSequence getStationElev() {
      return stationElev;
    }
    
    /** Sets the value of the 'stationElev' field */
    public com.my.rdd.StationMetaData.Builder setStationElev(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.stationElev = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'stationElev' field has been set */
    public boolean hasStationElev() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'stationElev' field */
    public com.my.rdd.StationMetaData.Builder clearStationElev() {
      stationElev = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'stationBeginTime' field */
    public java.lang.CharSequence getStationBeginTime() {
      return stationBeginTime;
    }
    
    /** Sets the value of the 'stationBeginTime' field */
    public com.my.rdd.StationMetaData.Builder setStationBeginTime(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.stationBeginTime = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'stationBeginTime' field has been set */
    public boolean hasStationBeginTime() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'stationBeginTime' field */
    public com.my.rdd.StationMetaData.Builder clearStationBeginTime() {
      stationBeginTime = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'stationEndTime' field */
    public java.lang.CharSequence getStationEndTime() {
      return stationEndTime;
    }
    
    /** Sets the value of the 'stationEndTime' field */
    public com.my.rdd.StationMetaData.Builder setStationEndTime(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.stationEndTime = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'stationEndTime' field has been set */
    public boolean hasStationEndTime() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'stationEndTime' field */
    public com.my.rdd.StationMetaData.Builder clearStationEndTime() {
      stationEndTime = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public StationMetaData build() {
      try {
        StationMetaData record = new StationMetaData();
        record.stationId = fieldSetFlags()[0] ? this.stationId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.stationName = fieldSetFlags()[1] ? this.stationName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.stationCity = fieldSetFlags()[2] ? this.stationCity : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.stationState = fieldSetFlags()[3] ? this.stationState : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.stationICAO = fieldSetFlags()[4] ? this.stationICAO : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.stationLatitude = fieldSetFlags()[5] ? this.stationLatitude : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.stationLongitude = fieldSetFlags()[6] ? this.stationLongitude : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.stationElev = fieldSetFlags()[7] ? this.stationElev : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.stationBeginTime = fieldSetFlags()[8] ? this.stationBeginTime : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.stationEndTime = fieldSetFlags()[9] ? this.stationEndTime : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
